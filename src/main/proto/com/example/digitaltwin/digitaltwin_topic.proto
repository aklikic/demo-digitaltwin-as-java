syntax = "proto3";

package com.example.digitaltwin;

import "kalix/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

import "com/example/digitaltwin/domain/digitaltwin_domain.proto";

option java_outer_classname = "DigitalTwinTopicApi";

message AlertTriggeredTopicEvent{
  string dt_id = 1;
  int64 metric_value = 2;
}

message AlertCanceledTopicEvent{
  string dt_id = 1;
}

service DigitalTwinToTopic {
  option (kalix.codegen) = {
    action: {}
  };
  rpc AlertTriggered (com.example.digitaltwin.domain.AlertTriggered) returns (AlertTriggeredTopicEvent) {
    option (kalix.method).eventing.in = {
      event_sourced_entity: "digitaltwin"
    };
    option (kalix.method).eventing.out = {
      topic:  "digitaltwin-topic"
    };
  }
  rpc AlertCanceled (com.example.digitaltwin.domain.AlertCanceled) returns (AlertCanceledTopicEvent) {
    option (kalix.method).eventing.in = {
      event_sourced_entity: "digitaltwin"
    };
    option (kalix.method).eventing.out = {
      topic: "digitaltwin-topic"
    };
  }
  rpc Ignore(google.protobuf.Any) returns (google.protobuf.Empty) {
    option (kalix.method).eventing.in = {
      event_sourced_entity: "digitaltwin"
    };
  }
}

